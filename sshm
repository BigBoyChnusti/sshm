#!/bin/bash
while true; do
clear
menuselectinput=$(cat menu | gum choose --limit=1) 
menuselect="$(echo $menuselectinput | grep -Eo "[0-9]+")"

case $menuselect in
        1)
            #Connect
            #Get information from JSON
            sshselect=$(cat connections.json | jq '.connections[].name' | gum choose)
            sshid=$(cat connections.json | jq '.connections[] | select (.name=='$sshselect')' | jq '.ID')
            sshhost=$(cat connections.json | jq '.connections[] | select (.ID=='$sshid')' | jq '.hostname')
            sshun=$(cat connections.json | jq '.connections[] | select (.ID=='$sshid')' | jq '.username')
           
            if [[ "$sshselect" == '"back"' ]] 
            then
            echo "going back"
        else
            #open SSH Connection
            
            gum confirm && eval ssh $sshun@$sshhost || echo "abort"
            fi
            ;;
        
        2)
            #Add connection
            #Get User Input
            newsshname=$(gum input --prompt "What's the name of this new Connection: " --placeholder "DHCP")
            newsshhostname=$(gum input --prompt "What Hostname shoud we use?: " --placeholder "sun.enterprise.com")
            newsshun=$(gum input --prompt "What user should we use to connect?: " --placeholder "root")

            #Find highest ID
            highestid=$(cat connections.json | jq -r 'map(.[].ID) | max')
            nextid=$((highestid+1))
            
            #Write JSON entry
            touch tmp.json
            jq '.connections += [{"ID": "'$nextid'", "name": "'$newsshname'", "hostname": "'$newsshhostname'", "username": "'$newsshun'"}]' connections.json | cat >> tmp.json
            cp tmp.json connections.json
            rm tmp.json
            ;;  
        3)
            #Exit
            gum confirm && echo "Closing Script" && exit 0 || echo "Okay"
            ;;
    esac
done
